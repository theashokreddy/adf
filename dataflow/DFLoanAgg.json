{
	"name": "DFLoanAgg",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "loans",
						"type": "DatasetReference"
					},
					"name": "srcLoans"
				},
				{
					"dataset": {
						"referenceName": "accounts",
						"type": "DatasetReference"
					},
					"name": "srcAccounts"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "aggLoans",
						"type": "DatasetReference"
					},
					"name": "tgtAggLoans"
				}
			],
			"transformations": [
				{
					"name": "jnr1"
				},
				{
					"name": "aggLoans"
				}
			],
			"scriptLines": [
				"source(output(",
				"          loan_id as string,",
				"          account_id as string,",
				"          amount as string,",
				"          duration as string,",
				"          payments as string,",
				"          status as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          fulldate as string,",
				"          location as string,",
				"          purpose as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     skipLines: 1) ~> srcLoans",
				"source(output(",
				"          account_id as string,",
				"          district_id as string,",
				"          frequency as string,",
				"          parseddate as string,",
				"          year as string,",
				"          month as string,",
				"          day as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcAccounts",
				"srcLoans, srcAccounts join(srcLoans@account_id == srcAccounts@account_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> jnr1",
				"jnr1 aggregate(groupBy(district_id),",
				"     amount = sum(toInteger(amount))) ~> aggLoans",
				"aggLoans sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> tgtAggLoans"
			]
		}
	}
}